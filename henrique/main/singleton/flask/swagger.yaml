swagger: '2.0'
info:
  title: jinni henrique for UWO
  version: "0.1.0"
consumes:
  - application/json
produces:
  - application/json

#security:
  # enable OAuth protection for all REST endpoints
  # (only active if the TOKENINFO_URL environment variable is set)
#  - oauth2: [uid]

paths:
  /health_liveness:
    get:
      tags: [healthcheck liveness]
      operationId: henrique.main.handlers.health_liveness.handler.Handler.get
      summary: Return a 200 status if health check is successful
      responses:
        200:
          description: Liveness Health check is successful
        404:
          description: Not Found

  /health_readiness:
    get:
      tags: [healthcheck readiness]
      operationId: henrique.main.handlers.health_readiness.handler.Handler.get
      summary: Return a 200 status if health check is successful
      responses:
        200:
          description: Readiness Health check is successful
        404:
          description: Not Found

  /khala/packet/receive:
    post:
      tags: [khala]
      operationId: henrique.main.handlers.khala.packet_handler.PacketHandler.post
      summary: Return a 200 status ask is valid
      parameters:
      - name: packet
        in: body
        required: true
        description: packet json
        schema:
          $ref: "#/definitions/packet"
      responses:
        200:
          description: Success
        400:
          description: Bad Request
        404:
          description: Not Found

  /khala/kakaotalk/query:
    get:
      tags: [khala]
      operationId: henrique.main.handlers.khala.kakaotalk.handler.KakaotalkUWOHandler.get
      summary: Translate
      parameters:
      - name: text
        in: query
        type: string
        required: true
      - name: sender_name
        in: query
        type: string
        required: true
      produces:
        - text/plain; charset=utf-8
      responses:
        200:
          description: Return deploy info
        404:
          description: Not Found

#  /khala/actions:
#  /khala/contract/create:



definitions:
#  chat:
#    type: object
#    properties:
#      sender_id:
#        type: string
#      chatroom_id:
#        type: string
#      locale:
#        type: string
#        example: ko-KR
#      text:
#        type: string
#        example: "?항구 리습"
#
#  contract:
#    type: object
#    required:
#    - action_uuid
#    - jinni_uuid
#    properties:
#      action_uuid:
#        type: string
#      jinni_uuid:
#        type: string

  packet:
    type: object
    required:
    - text
    - channel_user
    - chatroom
    - sender_name
    properties:
      channel_user:
        type: string
        example: kakaotalk_uwo.iris
      chatroom:
        type: string
        example: kakaotalk_uwo.uwo
      sender_name:
        type: string
        example: iris
      text:
        type: string
        example: "?항구 리습"

#        example: ["@sys.color"]

securityDefinitions:
  oauth2:
    type: oauth2
    flow: implicit
    authorizationUrl: https://example.com/oauth2/dialog
    scopes:
      uid: Unique identifier of the user accessing the service.
